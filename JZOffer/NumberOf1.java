/**
 * 二进制中1的个数
 * Created by geyan on 2018/8/19.
 */
public class NumberOf1 {

    /**
     * 题目：输入一个整数，输出该数二进制表示中1的个数。其中负数用补码的方式表示
     */

    /** 1与二进制的每一位做与操作，然后将1左移，避免将整数右移，因为负数用补码的方式表示，如果是负数，程序会陷入死循坏*/
    public int numberOf1_1(int n) {
        int count = 0, flag = 1;
        while ((n & flag) != 0) {
            count++;
            // 左移一位
            flag = flag << 1;
        }
        return count;
    }

    /**
     * 方法三：n & (n-1) 有多少这样的操作，就有多少个1
     * 如果一个整数不为0，那么这个整数的二进制表示至少有一位是1，
     * 如果我们把这个整数减1，那么原来处在整数最右边的1就会变成0，原来在1后面的所有0都会变成1，其他位置不会受到影响。
     * 即，把一个整数减去1，再和原整数做与运算，会把该整数最右边一个1变成0，那么一个整数的二进制有多少个1，就可以进行多少次这样的操作。
     */
    public int numberOf1_2(int n) {
        int count = 0;
        while (n != 0) {
            ++count;
            n = n & (n - 1);
        }
        return count;
    }
}
