/**
 * 题目：跳跃问题
 * 题目描述：给定一个数组，数组中元素表示你可以向后跳跃的步数，试问，我们能不能跳到最后一个元素位置
 * 
 * 分析：
 * 比如[2,3,1,1,4]，因为初始第一个位置为2，我们先跳1步，剩下1步了，到第二个元素位置，也就是3这个地方，因为3比1大，所以我们可以向后面跳跃3步
 * ，直接就到4了。
 * 根据上面的规则，每次跳跃1步，我们可跳跃步数减1，如果新的位置步数大于剩余步数，使用新的步数继续移动，如果可跳跃次数小于0并且还没到最后一个元素，
 * 那么失败。
 * 
 * @author geyan
 *
 */
public class JumpGame {

	public boolean jumpGame(int[] a, int n) {
		if (n == 0) {
			return true;
		}
		int k = a[0];
		for (int i = 1; i < n; i++) {
			k--;
			// 可跳跃步数
			if (k < 0) {
				return false;
			}
			// 跳了一步，发现新的位置上的步数大于剩余步数，则使用新的步数继续移动
			if (k < a[i]) {
				k = a[i];
			}
		}
		return true;
	}
}
